[tox]
minversion = 3.7
envlist = py35-{test,runcmd}, py36-{test,runcmd}, py37-{test,runcmd}, run-{cmd,blackcheck,black,isort,isortcheck}, docs, coverage
requires = tox-conda

[testenv:.tox]
envdir = {toxworkdir}/.tox


[testenv]
basepython =
    py37,run,docs,coverage: python3.7
    py36: python3.6
    py35: python3.5
envdir =
    py37,run,docs,coverage: {toxworkdir}/py37
    py36: {toxworkdir}/py36
    py35: {toxworkdir}/py35
conda_deps =
    qutip
conda_channels=
    default
    conda-forge
usedevelop = true
extras=
    dev
setenv =
    MATPLOTLIBRC = tests
    SPELLCHECK = en_US
description =
    py{36,37}-test: Run tests in the corresponding environment
    py{36,37}-runcmd: Run arbitrary command following "--" in the corresponding environment
commands_pre =
    python -V
    python scripts/install-pre-commit.py
commands =
    py{35,36,37}-runcmd: {posargs:python -c 'print("No command")'}
    py{35,36,37}-test: py.test -vvv --doctest-modules --cov=krotov --nbval --sanitize-with docs/nbval_sanitize.cfg --durations=10 -x -s {posargs:src tests docs README.rst}


[testenv:docs]
description = Generate the docs
commands =
    sphinx-build docs docs/_build {posargs:--color}


[testenv:coverage]
description = "Generate a coverage report"
depends = py37-test
commands =
    coverage html
    python -c 'import pathlib; print("coverage report available in \{\}".format(pathlib.Path(".") / "htmlcov" / "index.html"))'


[testenv:run-cmd]
description = Run arbitrary command following "--" in the latest venv, e.g. "tox -e run-cmd -- ipython"
commands = {posargs:python -c 'print("No command")'}


[testenv:run-black]
description = Run black formatter in the latest venv
commands = python -m black --skip-string-normalization --line-length 79 src tests


[testenv:run-blackcheck]
description = Run black formatter check in the latext venv
commands = python -m black --skip-string-normalization --line-length 79 --check src tests


[testenv:run-isort]
description = Run isort formatter in the latest venv
commands = python -m isort --recursive src tests


[testenv:run-isortcheck]
description = Run isort formatter check in the latest venv
commands = python -m isort --recursive --check-only src tests


[testenv:run-flake8]
description = Run flake8 formatter check in the latest venv
commands = python -m flake8 src tests


[testenv:run-pylint]
description = Run pylint formatter check in the latest venv
commands = python -m pylint -j 0 src
